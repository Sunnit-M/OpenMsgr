name: Deploy To Server 

on:
  push:
    branches:
      - master
    paths:
      - 'Server/**'
      - '.github/workflows/serverDeployment.yml'
      - 'Dockerfile'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker build -t openmsgr-server:latest ./Server

      - name: Save Docker Image
        run: docker save openmsgr-server:latest | gzip > openmsgr-server.tar.gz

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: OpenMsgrDockerImage
          path: openmsgr-server.tar.gz

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: OpenMsgrDockerImage

      - name: Connect to Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.OAUTH_CLIENT_ID }} 
          oauth-secret: ${{ secrets.OAUTH_SECRET }}

      - name: Create remote tmp directory
        run: ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.IP }} "mkdir -p ~/OpenMsgr/tmp"

      - name: Copy Docker Image to Pi
        run: scp -o StrictHostKeyChecking=no openmsgr-server.tar.gz ${{ secrets.SERVER_USERNAME }}@${{ secrets.IP }}:~/OpenMsgr/tmp/

      - name: Deploy Docker on Pi
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.IP }} <<'EOF'
            echo "Stopping old container..."
            docker kill openmsgr-server || true
            docker rm openmsgr-server || true

            echo "Loading Docker image..."
            cd ~/OpenMsgr/tmp/
            gunzip -c openmsgr-server.tar.gz | docker load

            echo "Starting new container..."
            docker run -d --name openmsgr-server -p 5000:5000 openmsgr-server:latest
          EOF
